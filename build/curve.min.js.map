{"version":3,"file":"curve.min.js","sources":["../src/curve.js"],"sourcesContent":["/* jshint esversion: 9 */\n/* For dealing with spline curves */\n/* global THREE, AFRAME */\n(function () {\n\"use strict\";\n\nconst __tempVector1 = new THREE.Vector3();\nconst __tempVector2 = new THREE.Vector3();\nconst __tempTangent = new THREE.Vector3();\nconst __tempPointA = new THREE.Vector3();\nconst __tempPointB = new THREE.Vector3();\nconst __tempMatrix4 = new THREE.Matrix4();\nconst __tempQuaternion = new THREE.Quaternion();\nconst zeroVector3 = new THREE.Vector3(0, 0, 0);\nconst zAxis = new THREE.Vector3(0, 0, 1);\n\nAFRAME.registerComponent('curve', {\n\n\tdescription: `This defines a Catmull-Rom spline curve. It is exposed on el.components.curve.curve, `,\n\n\tschema: {\n\n\t\ttension: {\n\t\t\tdescription: `[The Catmull-Rom Tension](https://www.w3.org/Graphics/SVG/WG/wiki/Path_Enhancements#:~:text=A%20Catmull%2DRom%20curve%20is,not%20through%2C%20the%20points%29)`,\n\t\t\tdefault: 0.25\n\t\t},\n\n\t\tclosed: {\n\t\t\tdescription: `Whether it joins back up with it's tail`,\n\t\t\tdefault: false\n\t\t}\n\t},\n\n\tinit () {\n\t\tthis.onPointShift = this.onPointShift.bind(this);\n\t\tthis.onChildRemove = this.onChildRemove.bind(this);\n\t\tthis.update = this.update.bind(this);\n\t\tthis.el.addEventListener('point-shift', this.onPointShift);\n\t\tthis.el.addEventListener('point-change', this.update);\n\t\tthis.observer = new MutationObserver(this.onChildRemove);\n\t\tthis.observer.observe(this.el, {\n\t\t\tsubtree: true,\n\t\t\tchildList: true\n\t\t});\n\t\tthis.points = new Map();\n\t},\n\n\tonChildRemove (mutationsList) {\n\t\tconst els = Array.from(this.points.keys());\n\t\tfor(const mutation of mutationsList) {\n\t\t\tfor (const node of mutation.removedNodes) {\n\t\t\t\tif (els.includes(node)) {\n\t\t\t\t\tthis.needsUpdate = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tonPointShift() {\n\t\tif (this.curve) {\n\t\t\tthis.handlePointParents();\n\t\t\tthis.curve.updateArcLengths();\n\t\t\tthis.el.emit('curve-shift');\n\t\t}\n\t},\n\n\tupdate: function () {\n\t\tthis.needsUpdate = true;\n\t},\n\n\thandlePointParents () {\n\t\tlet hasReachedTop;\n\t\tfor (const [el, position] of this.points) {\n\t\t\tconst object = el.object3D;\n\t\t\tposition.copy(object.position);\n\t\t\thasReachedTop = false;\n\t\t\tobject.traverseAncestors(parent => {\n\t\t\t\tif (parent === this.el.object3D) hasReachedTop = true;\n\t\t\t\tif (hasReachedTop) return;\n\t\t\t\tposition.applyMatrix4(parent.matrix);\n\t\t\t});\n\t\t}\n\t},\n\n\ttick() {\n\t\tif (!this.needsUpdate) return;\n\t\tthis.needsUpdate = false;\n\n\t\tthis.points = new Map(\n\t\t\tArray.from(this.el.querySelectorAll('a-curve-point'))\n\t\t\t.filter(el => !!el.object3D)\n\t\t\t.map(el => {\n\t\t\t\treturn [el, new THREE.Vector3()];\n\t\t\t})\n\t\t);\n\n\t\tthis.handlePointParents();\n\n\t\tif (this.points.size <= 1) return;\n\n\t\tthis.curve = new THREE.CatmullRomCurve3(Array.from(this.points.values()));\n\n\t\tthis.curve.closed = this.data.closed;\n\t\tthis.curve.tension = this.data.tension;\n\t\t\n\t\tthis.curve.arcLengthDivisions = Math.ceil(this.curve.getLength()/0.01);\n\t\tthis.curve.updateArcLengths();\n\t\tthis.ready = true;\n\n\t\tthis.el.emit('curve-updated');\n\n\t\t// Rotate each point object to line up with the curve\n\t\tfor (const [{object3D: object}, pointPosition] of this.points) {\n\t\t\tconst {\n\t\t\t\ttangent, position\n\t\t\t} = this.closestPointInLocalSpace(pointPosition);\n\t\t\tconst targetPoint = tangent.multiplyScalar(0.4).add(position);\n\n\t\t\t// Get the unit vector from the object toward the target\n\t\t\tconst lookAtPoint = __tempVector2.copy(targetPoint);\n\t\t\tconst normal = __tempVector1.set(0,1,0).applyQuaternion(object.quaternion);\n\t\t\tnearestPointInPlane(position, normal, targetPoint, lookAtPoint);\n\t\t\tobject.lookAt(lookAtPoint);\n\t\t}\n\t},\n\n\tremove () {\n\t\tthis.curve = null;\n\t\tthis.ready = false;\n\t\tthis.observer.disconnect();\n\t},\n\n\tclosestPointInLocalSpace (point, resolution) {\n\t\tconst self = this;\n\t\tif (!this.ready) throw Error('Curve not instantiated yet.');\n\t\tresolution = resolution || 0.1 / this.curve.getLength();\n\n\t\tfunction binarySearch (testPoint, currentRes) {\n\t\t\tconst aTest = (1 + testPoint + currentRes) % 1;\n\t\t\tconst bTest = (1 + testPoint - currentRes) % 1;\n\t\t\tconst a = self.curve.getPointAt(aTest, __tempPointA);\n\t\t\tconst b = self.curve.getPointAt(bTest, __tempPointB);\n\t\t\tconst aDistance = a.distanceTo(point);\n\t\t\tconst bDistance = b.distanceTo(point);\n\t\t\tconst aSmaller = aDistance < bDistance;\n\t\t\tif (currentRes < resolution) {\n\n\t\t\t\tconst tangent = self.curve.getTangentAt(aSmaller ? aTest : bTest, __tempTangent);\n\t\t\t\tif (currentRes < resolution) return {\n\t\t\t\t\tresult: aSmaller ? aTest : bTest,\n\t\t\t\t\tposition: aSmaller ? a : b,\n\t\t\t\t\tdistance: aSmaller ? aDistance : bDistance,\n\t\t\t\t\tnormal: normalFromTangent(tangent, __tempVector1),\n\t\t\t\t\ttangent: tangent\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (aDistance < bDistance) {\n\t\t\t\treturn binarySearch(aTest, currentRes/2);\n\t\t\t} else {\n\t\t\t\treturn binarySearch(bTest, currentRes/2);\n\t\t\t}\n\t\t}\n\n\t\tconst samples = 20;\n\t\tconst results = [];\n\t\tfor (let i=0; i<=samples; i++) {\n\t\t\tconst u = (i/samples) % 1;\n\t\t\tconst linePoint = this.curve.getPointAt(u, __tempPointA);\n\t\t\tconst distance = point.distanceTo(linePoint);\n\t\t\tresults.push(distance);\n\t\t}\n\t\tconst smallestDistance = results.reduce((a,b) => a<b?a:b);\n\t\tconst u = results.indexOf(smallestDistance)/samples;\n\t\treturn binarySearch(u, 1/samples);\n\t}\n});\n\n\n\nAFRAME.registerComponent('curve-point', {\n\tdescription: `A point that tracks itself in 3D world space and updates the curve that it has changed.`,\n\tdependencies: ['position'],\n\tschema: {},\n\n\tinit: function () {\n\t\tlet el = this.el;\n\t\twhile (el && el.matches && !el.matches('a-curve,[curve]')) el = el.parentNode;\n\t\tif (!el) throw Error('curve-points need to be inside a curve');\n\t\tthis.parentCurve = el;\n\t\tthis.oldPos = new THREE.Vector3();\n\t},\n\n\tupdate: function () {\n\t\tthis.el.emit('point-change');\n\t},\n\n\ttick() {\n\t\tconst worldPos = this.el.object3D.getWorldPosition(__tempPointA);\n\t\tif (this.oldPos.manhattanDistanceTo(worldPos) !== 0) {\n\t\t\tthis.el.emit('point-shift');\n\t\t}\n\t\tthis.oldPos.copy(worldPos);\n\t},\n\n\tremove: function () {\n\t\tthis.el.emit('point-change');\n\t}\n\n});\n\nconst tempQuaternion = new THREE.Quaternion();\nfunction normalFromTangent(tangent, outVec) {\n\toutVec.set(0, 1, 0);\n\tconst lineEnd = outVec;\n\ttempQuaternion.setFromUnitVectors(zAxis, tangent);\n\tlineEnd.applyQuaternion(tempQuaternion);\n\treturn lineEnd;\n}\n\nAFRAME.registerComponent('draw-curve', {\n\n\tdependencies: ['curve', 'material'],\n\n\tschema: {\n\t\tcurve: { \n\t\t\tdescription: `Curve to draw, defaults to the curve on the same entity.`,\t\n\t\t\ttype: 'selector'\n\t\t},\n\t\tspacing: { \n\t\t\tdescription: `How far apart to place the line segments, smaller is a smoother curve.`,\t\n\t\t\tdefault: 0.5\n\t\t},\n\t\ttangent: { \n\t\t\tdescription: `Draw curve tangents`,\t\n\t\t\tdefault: false\n\t\t},\n\t\tnormal: { \n\t\t\tdescription: `Draw curve normals`,\t\n\t\t\tdefault: false\n\t\t},\n\t\tlength: { \n\t\t\tdescription: `Length to draw the normal and tangent markers`,\t\n\t\t\tdefault: 0.1\n\t\t}\n\t},\n\n\tinit: function () {\n\t\tthis.el.addEventListener('curve-updated', this.update.bind(this));\n\t},\n\n\tupdate: function () {\n\t\tif (this.data.curve) {\n\t\t\tthis.curve = this.data.curve.components.curve;\n\t\t} else if (this.el.components.curve.curve) {\n\t\t\tthis.curve = this.el.components.curve;\n\t\t}\n\n\t\tif (!this.curve) return;\n\n\t\tif (this.curve.curve) {\n\n\t\t\tconst length = this.curve.curve.getLength();\n\t\t\tconst count = Math.ceil(length/this.data.spacing);\n\n\t\t\tlet lineEnd;\n\t\t\tlet tangentGeometry;\n\t\t\tlet normalGeometry;\n\n\t\t\tconst mesh = new THREE.Line(\n\t\t\t\tnew THREE.BufferGeometry(), \n\t\t\t\tnew THREE.LineBasicMaterial({\n\t\t\t\t\tcolor: 'red'\n\t\t\t\t})\n\t\t\t);\n\t\t\tthis.el.setObject3D('line', mesh);\n\n\t\t\tconst points = this.curve.curve.getSpacedPoints(count);\n\t\t\tmesh.geometry.setFromPoints(points);\n\n\t\t\t// Generate normals and tangents for each point\n\t\t\tif (this.data.tangent) points.forEach((p,i) => {\n\t\t\t\tconst u = i/count;\n\t\t\t\tlineEnd = __tempVector1;\n\t\t\t\tlineEnd.copy(p);\n\t\t\t\tlineEnd.add(this.curve.curve.getTangentAt(u, __tempTangent).normalize().multiplyScalar(this.data.length));\n\t\t\t\t\n\t\t\t\ttangentGeometry = new THREE.BufferGeometry().setFromPoints([\n\t\t\t\t\tp,lineEnd\n\t\t\t\t]);\n\n\t\t\t\tmesh.add(new THREE.Line(\n\t\t\t\t\ttangentGeometry,\n\t\t\t\t\tnew THREE.LineBasicMaterial({\n\t\t\t\t\t\tcolor: 'green'\n\t\t\t\t\t})\n\t\t\t\t));\n\t\t\t});\n\n\n\t\t\tif (this.data.normal) points.forEach((p,i) => {\n\t\t\t\tconst u = i/count;\n\t\t\t\tlineEnd = normalFromTangent(\n\t\t\t\t\tthis.curve.curve.getTangentAt(u, __tempTangent),\n\t\t\t\t\t__tempVector1\n\t\t\t\t).multiplyScalar(this.data.length);\n\t\t\t\tlineEnd.add(p);\n\n\t\t\t\tnormalGeometry = new THREE.BufferGeometry().setFromPoints([\n\t\t\t\t\tp, lineEnd\n\t\t\t\t]);\n\n\t\t\t\tmesh.add(new THREE.Line(\n\t\t\t\t\tnormalGeometry,\n\t\t\t\t\tnew THREE.LineBasicMaterial({\n\t\t\t\t\t\tcolor: 'white'\n\t\t\t\t\t})\n\t\t\t\t));\n\t\t\t});\n\t\t}\n\t},\n\n\tremove: function () {\n\n\t\tthis.el.getObject3D('mesh').geometry = new THREE.Geometry();\n\t}\n\n});\n\nfunction nearestPointInPlane(position, normal, p1, out) {\n\tconst d = normal.dot(position);\n\n\t// distance of point from plane\n\tconst t = (d - normal.dot(p1))/normal.length();\n\n\t// closest point on the plane\n\tout.copy(normal);\n\tout.multiplyScalar(t);\n\tout.add(p1);\n\treturn out;\n}\n\nAFRAME.registerComponent('clone-along-curve', {\n\n\tdescription: `Apply this to the curve element, or set one seperately, to instance element at fixed intervals along a curve. They will be rotated to follw the curve.`,\n\n\tdependencies: ['curve'],\n\n\tschema: {\n\t\tcurve: {\n\t\t\tdescription: `Optional, pick a particular curve to use, it defaults to the curve on it's own element`,\n\t\t\ttype: 'selector'\n\t\t},\n\t\tspacing: { \n\t\t\tdescription: `How far apart to place the elements`,\t\t\n\t\t\tdefault: 1\n\t\t},\n\t\tscale: {\n\t\t\tdescription: `Scale of the elements`,\t\n\t\t\ttype: 'vec3',\n\t\t\tdefault: {x:1,y:1,z:1}\n\t\t}\n\t},\n\n\tinit: function () {\n\t\tthis.onPointShift = this.onPointShift.bind(this);\n\t\tthis.update = this.update.bind(this);\n\t\tthis.el.addEventListener('model-loaded', function (e) {\n\t\t\t// if the model is loaded for this element then update so it can be used\n\t\t\t// Don't trigger update for child elements models updating\n\t\t\tif (e.target === this.el) {\n\t\t\t\tthis.update();\n\t\t\t}\n\t\t}.bind(this));\n\t\tthis.pointShift = true;\n\t},\n\n\tupdate: function () {\n\t\tthis.remove();\n\t\tif (this.data.curve) {\n\t\t\tthis.curveEl = this.data.curve;\n\t\t\tthis.curve = this.data.curve.components.curve;\n\t\t\tthis.curveEl.addEventListener('curve-shift', this.onPointShift);\n\t\t\tthis.curveEl.addEventListener('curve-updated', this.update);\n\t\t} else if (this.el.components.curve) {\n\t\t\tthis.curveEl = this.el;\n\t\t\tthis.curve = this.el.components.curve;\n\t\t\tthis.curveEl.addEventListener('curve-shift', this.onPointShift);\n\t\t\tthis.curveEl.addEventListener('curve-updated', this.update);\n\t\t}\n\t},\n\n\tonPointShift: function () {\n\t\tthis.pointShift = true;\n\t\tconst clones = this.el.getObject3D('clones');\n\t\tif (clones) {\n\t\t\tconst cloneCount = clones.children[0].instanceMatrix.count;\n\t\t\tconst length = this.curve.curve.getLength();\n\t\t\tconst count = Math.ceil(length/this.data.spacing);\n\n\t\t\t// If the new needed amount needs more than 5% more pieces then regenerate the isntanced mesh\n\t\t\tif (count > Math.floor(cloneCount * 1.05)) {\n\t\t\t\tthis.update();\n\t\t\t}\n\t\t}\n\t},\n\n\ttick() {\n\t\tconst mesh = this.el.getObject3D('mesh');\n\t\tif (mesh) {\n\t\t\tlet clones = this.el.getObject3D('clones');\n\t\t\tconst length = this.curve.curve.getLength();\n\t\t\tconst count = Math.ceil(length/this.data.spacing);\n\n\t\t\tif (!clones && this.curve) {\n\n\t\t\t\tmesh.visible = false;\n\t\t\t\tclones =  new THREE.Group();\n\t\t\t\tthis.el.setObject3D('clones', clones);\n\t\t\t\tmesh.traverse(function (obj) {\n\t\t\t\t\tif (obj.geometry) {\n\t\t\t\t\t\tconst geometry = obj.geometry.clone();\n\t\t\t\t\t\tgeometry.applyMatrix4(obj.matrix);\n\t\t\t\t\t\tconst mesh = new THREE.InstancedMesh(geometry, obj.material, count);\n\t\t\t\t\t\tmesh.instanceMatrix.setUsage( THREE.DynamicDrawUsage );\n\t\t\t\t\t\tclones.add(mesh);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis.pointShift = true;\n\t\t\t}\n\n\t\t\t// reposition points\n\t\t\tif (this.pointShift) {\n\t\t\t\tconst cloneCount = clones.children[0].instanceMatrix.count;\n\t\t\t\tfor (let i=0;i<cloneCount;i++) {\n\t\t\t\t\tif (i>count) {\n\t\t\t\t\t\t// Hide excess clone pieces\n\t\t\t\t\t\t__tempMatrix4.compose(\n\t\t\t\t\t\t\tzeroVector3,\n\t\t\t\t\t\t\t__tempQuaternion,\n\t\t\t\t\t\t\tzeroVector3\n\t\t\t\t\t\t);\n\t\t\t\t\t\tfor (const instance of clones.children) {\n\t\t\t\t\t\t\tinstance.setMatrixAt(i,__tempMatrix4);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t// handle when there aren't enough clone pieces\n\t\t\t\t\t\tconst u = i/Math.min(count, cloneCount);\n\t\t\t\t\t\tconst tangent = this.curve.curve.getTangentAt(u, __tempTangent);\n\t\t\t\t\t\t__tempMatrix4.compose(\n\t\t\t\t\t\t\tthis.curve.curve.getPointAt(u, __tempPointA),\n\t\t\t\t\t\t\t__tempQuaternion.setFromUnitVectors(zAxis, tangent),\n\t\t\t\t\t\t\tthis.data.scale\n\t\t\t\t\t\t);\n\t\t\t\t\t\tfor (const instance of clones.children) {\n\t\t\t\t\t\t\tinstance.setMatrixAt(i,__tempMatrix4);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const instance of clones.children) {\n\t\t\t\t\tinstance.instanceMatrix.needsUpdate = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tremove: function () {\n\t\tthis.curve = null;\n\t\tconst clones = this.el.getObject3D('clones');\n\t\tif (clones) {\n\t\t\tclones.children.forEach(child => child.dispose());\n\t\t\tthis.el.removeObject3D('clones');\n\t\t}\n\t}\n\n});\n\n\nAFRAME.registerPrimitive('a-curve', {\n\n\tdescription: `Describes a curve doesn't display anything unless one of the other components is used`,\n\n\tdefaultComponents: {\n\t\t'curve': {}\n\t},\n\tmappings: {\n\t\tclosed: 'curve.closed',\n\t\ttension: 'curve.tension'\n\t}\n\n});\n\nAFRAME.registerPrimitive('a-curve-point', {\n\tdescription: `This is used to set the control points of the curve, they don't need to be immediate children.`,\n\tdefaultComponents: {\n\t\t'curve-point': {}\n\t}\n});\n\nAFRAME.registerPrimitive('a-draw-curve', {\n\n\tdescription: `Describes a curve this uses the draw-curve component to draw a line where the curve is.`,\n\n\tdefaultComponents: {\n\t\t'draw-curve': {},\n\t\t'curve': {}\n\t},\n\tmappings: {\n\t\tcurve: 'draw-curve.curve',\n\t\tclosed: 'curve.closed',\n\t\ttension: 'curve.tension'\n\t}\n});\n\n}());\n"],"names":["__tempVector1","THREE","Vector3","__tempVector2","__tempTangent","__tempPointA","__tempPointB","__tempMatrix4","Matrix4","__tempQuaternion","Quaternion","zeroVector3","zAxis","AFRAME","registerComponent","description","schema","tension","default","closed","init","this","onPointShift","bind","onChildRemove","update","el","addEventListener","observer","MutationObserver","observe","subtree","childList","points","Map","mutationsList","els","Array","from","keys","mutation","node","removedNodes","includes","needsUpdate","curve","handlePointParents","updateArcLengths","emit","hasReachedTop","position","object","object3D","copy","traverseAncestors","parent","applyMatrix4","matrix","tick","querySelectorAll","filter","map","size","CatmullRomCurve3","values","data","arcLengthDivisions","Math","ceil","getLength","ready","pointPosition","tangent","closestPointInLocalSpace","targetPoint","multiplyScalar","add","lookAtPoint","nearestPointInPlane","set","applyQuaternion","quaternion","lookAt","remove","disconnect","point","resolution","self","Error","results","i","u","linePoint","getPointAt","distance","distanceTo","push","smallestDistance","reduce","a","b","binarySearch","testPoint","currentRes","aTest","bTest","aDistance","bDistance","aSmaller","getTangentAt","result","normal","normalFromTangent","indexOf","dependencies","matches","parentNode","parentCurve","oldPos","worldPos","getWorldPosition","manhattanDistanceTo","tempQuaternion","outVec","lineEnd","setFromUnitVectors","p1","out","t","dot","length","type","spacing","components","count","tangentGeometry","normalGeometry","mesh","Line","BufferGeometry","LineBasicMaterial","color","setObject3D","getSpacedPoints","geometry","setFromPoints","forEach","p","normalize","getObject3D","Geometry","scale","x","y","z","e","target","pointShift","curveEl","clones","cloneCount","children","instanceMatrix","floor","visible","Group","traverse","obj","clone","InstancedMesh","material","setUsage","DynamicDrawUsage","compose","instance","setMatrixAt","min","child","dispose","removeObject3D","registerPrimitive","defaultComponents","mappings"],"mappings":"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"}