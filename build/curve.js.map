{"version":3,"file":"curve.js","sources":["../src/curve.js"],"sourcesContent":["/* jshint esversion: 9 */\n/* For dealing with spline curves */\n/* global THREE, AFRAME */\n(function () {\n\"use strict\";\n\nconst __tempVector1 = new THREE.Vector3();\nconst __tempVector2 = new THREE.Vector3();\nconst __tempTangent = new THREE.Vector3();\nconst __tempPointA = new THREE.Vector3();\nconst __tempPointB = new THREE.Vector3();\nconst __tempMatrix4 = new THREE.Matrix4();\nconst __tempQuaternion = new THREE.Quaternion();\nconst zeroVector3 = new THREE.Vector3(0, 0, 0);\nconst zAxis = new THREE.Vector3(0, 0, 1);\n\nAFRAME.registerComponent('curve', {\n\n\tdescription: `This defines a Catmull-Rom spline curve. It is exposed on el.components.curve.curve, `,\n\n\tschema: {\n\n\t\ttension: {\n\t\t\tdescription: `[The Catmull-Rom Tension](https://www.w3.org/Graphics/SVG/WG/wiki/Path_Enhancements#:~:text=A%20Catmull%2DRom%20curve%20is,not%20through%2C%20the%20points%29)`,\n\t\t\tdefault: 0.25\n\t\t},\n\n\t\tclosed: {\n\t\t\tdescription: `Whether it joins back up with it's tail`,\n\t\t\tdefault: false\n\t\t}\n\t},\n\n\tinit () {\n\t\tthis.onPointShift = this.onPointShift.bind(this);\n\t\tthis.onChildRemove = this.onChildRemove.bind(this);\n\t\tthis.update = this.update.bind(this);\n\t\tthis.el.addEventListener('point-shift', this.onPointShift);\n\t\tthis.el.addEventListener('point-change', this.update);\n\t\tthis.observer = new MutationObserver(this.onChildRemove);\n\t\tthis.observer.observe(this.el, {\n\t\t\tsubtree: true,\n\t\t\tchildList: true\n\t\t});\n\t\tthis.points = new Map();\n\t},\n\n\tonChildRemove (mutationsList) {\n\t\tconst els = Array.from(this.points.keys());\n\t\tfor(const mutation of mutationsList) {\n\t\t\tfor (const node of mutation.removedNodes) {\n\t\t\t\tif (els.includes(node)) {\n\t\t\t\t\tthis.needsUpdate = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tonPointShift() {\n\t\tif (this.curve) {\n\t\t\tthis.handlePointParents();\n\t\t\tthis.curve.updateArcLengths();\n\t\t\tthis.el.emit('curve-shift');\n\t\t}\n\t},\n\n\tupdate: function () {\n\t\tthis.needsUpdate = true;\n\t},\n\n\thandlePointParents () {\n\t\tlet hasReachedTop;\n\t\tfor (const [el, position] of this.points) {\n\t\t\tconst object = el.object3D;\n\t\t\tposition.copy(object.position);\n\t\t\thasReachedTop = false;\n\t\t\tobject.traverseAncestors(parent => {\n\t\t\t\tif (parent === this.el.object3D) hasReachedTop = true;\n\t\t\t\tif (hasReachedTop) return;\n\t\t\t\tposition.applyMatrix4(parent.matrix);\n\t\t\t});\n\t\t}\n\t},\n\n\ttick() {\n\t\tif (!this.needsUpdate) return;\n\t\tthis.needsUpdate = false;\n\n\t\tthis.points = new Map(\n\t\t\tArray.from(this.el.querySelectorAll('a-curve-point'))\n\t\t\t.filter(el => !!el.object3D)\n\t\t\t.map(el => {\n\t\t\t\treturn [el, new THREE.Vector3()];\n\t\t\t})\n\t\t);\n\n\t\tthis.handlePointParents();\n\n\t\tif (this.points.size <= 1) return;\n\n\t\tthis.curve = new THREE.CatmullRomCurve3(Array.from(this.points.values()));\n\n\t\tthis.curve.closed = this.data.closed;\n\t\tthis.curve.tension = this.data.tension;\n\t\t\n\t\tthis.curve.arcLengthDivisions = Math.ceil(this.curve.getLength()/0.01);\n\t\tthis.curve.updateArcLengths();\n\t\tthis.ready = true;\n\n\t\tthis.el.emit('curve-updated');\n\n\t\t// Rotate each point object to line up with the curve\n\t\tfor (const [{object3D: object}, pointPosition] of this.points) {\n\t\t\tconst {\n\t\t\t\ttangent, position\n\t\t\t} = this.closestPointInLocalSpace(pointPosition);\n\t\t\tconst targetPoint = tangent.multiplyScalar(0.4).add(position);\n\n\t\t\t// Get the unit vector from the object toward the target\n\t\t\tconst lookAtPoint = __tempVector2.copy(targetPoint);\n\t\t\tconst normal = __tempVector1.set(0,1,0).applyQuaternion(object.quaternion);\n\t\t\tnearestPointInPlane(position, normal, targetPoint, lookAtPoint);\n\t\t\tobject.lookAt(lookAtPoint);\n\t\t}\n\t},\n\n\tremove () {\n\t\tthis.curve = null;\n\t\tthis.ready = false;\n\t\tthis.observer.disconnect();\n\t},\n\n\tclosestPointInLocalSpace (point, resolution) {\n\t\tconst self = this;\n\t\tif (!this.ready) throw Error('Curve not instantiated yet.');\n\t\tresolution = resolution || 0.1 / this.curve.getLength();\n\n\t\tfunction binarySearch (testPoint, currentRes) {\n\t\t\tconst aTest = (1 + testPoint + currentRes) % 1;\n\t\t\tconst bTest = (1 + testPoint - currentRes) % 1;\n\t\t\tconst a = self.curve.getPointAt(aTest, __tempPointA);\n\t\t\tconst b = self.curve.getPointAt(bTest, __tempPointB);\n\t\t\tconst aDistance = a.distanceTo(point);\n\t\t\tconst bDistance = b.distanceTo(point);\n\t\t\tconst aSmaller = aDistance < bDistance;\n\t\t\tif (currentRes < resolution) {\n\n\t\t\t\tconst tangent = self.curve.getTangentAt(aSmaller ? aTest : bTest, __tempTangent);\n\t\t\t\tif (currentRes < resolution) return {\n\t\t\t\t\tresult: aSmaller ? aTest : bTest,\n\t\t\t\t\tposition: aSmaller ? a : b,\n\t\t\t\t\tdistance: aSmaller ? aDistance : bDistance,\n\t\t\t\t\tnormal: normalFromTangent(tangent, __tempVector1),\n\t\t\t\t\ttangent: tangent\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (aDistance < bDistance) {\n\t\t\t\treturn binarySearch(aTest, currentRes/2);\n\t\t\t} else {\n\t\t\t\treturn binarySearch(bTest, currentRes/2);\n\t\t\t}\n\t\t}\n\n\t\tconst samples = 20;\n\t\tconst results = [];\n\t\tfor (let i=0; i<=samples; i++) {\n\t\t\tconst u = (i/samples) % 1;\n\t\t\tconst linePoint = this.curve.getPointAt(u, __tempPointA);\n\t\t\tconst distance = point.distanceTo(linePoint);\n\t\t\tresults.push(distance);\n\t\t}\n\t\tconst smallestDistance = results.reduce((a,b) => a<b?a:b);\n\t\tconst u = results.indexOf(smallestDistance)/samples;\n\t\treturn binarySearch(u, 1/samples);\n\t}\n});\n\n\n\nAFRAME.registerComponent('curve-point', {\n\tdescription: `A point that tracks itself in 3D world space and updates the curve that it has changed.`,\n\tdependencies: ['position'],\n\tschema: {},\n\n\tinit: function () {\n\t\tlet el = this.el;\n\t\twhile (el && el.matches && !el.matches('a-curve,[curve]')) el = el.parentNode;\n\t\tif (!el) throw Error('curve-points need to be inside a curve');\n\t\tthis.parentCurve = el;\n\t\tthis.oldPos = new THREE.Vector3();\n\t},\n\n\tupdate: function () {\n\t\tthis.el.emit('point-change');\n\t},\n\n\ttick() {\n\t\tconst worldPos = this.el.object3D.getWorldPosition(__tempPointA);\n\t\tif (this.oldPos.manhattanDistanceTo(worldPos) !== 0) {\n\t\t\tthis.el.emit('point-shift');\n\t\t}\n\t\tthis.oldPos.copy(worldPos);\n\t},\n\n\tremove: function () {\n\t\tthis.el.emit('point-change');\n\t}\n\n});\n\nconst tempQuaternion = new THREE.Quaternion();\nfunction normalFromTangent(tangent, outVec) {\n\toutVec.set(0, 1, 0);\n\tconst lineEnd = outVec;\n\ttempQuaternion.setFromUnitVectors(zAxis, tangent);\n\tlineEnd.applyQuaternion(tempQuaternion);\n\treturn lineEnd;\n}\n\nAFRAME.registerComponent('draw-curve', {\n\n\tdependencies: ['curve', 'material'],\n\n\tschema: {\n\t\tcurve: { \n\t\t\tdescription: `Curve to draw, defaults to the curve on the same entity.`,\t\n\t\t\ttype: 'selector'\n\t\t},\n\t\tspacing: { \n\t\t\tdescription: `How far apart to place the line segments, smaller is a smoother curve.`,\t\n\t\t\tdefault: 0.5\n\t\t},\n\t\ttangent: { \n\t\t\tdescription: `Draw curve tangents`,\t\n\t\t\tdefault: false\n\t\t},\n\t\tnormal: { \n\t\t\tdescription: `Draw curve normals`,\t\n\t\t\tdefault: false\n\t\t},\n\t\tlength: { \n\t\t\tdescription: `Length to draw the normal and tangent markers`,\t\n\t\t\tdefault: 0.1\n\t\t}\n\t},\n\n\tinit: function () {\n\t\tthis.el.addEventListener('curve-updated', this.update.bind(this));\n\t},\n\n\tupdate: function () {\n\t\tif (this.data.curve) {\n\t\t\tthis.curve = this.data.curve.components.curve;\n\t\t} else if (this.el.components.curve.curve) {\n\t\t\tthis.curve = this.el.components.curve;\n\t\t}\n\n\t\tif (!this.curve) return;\n\n\t\tif (this.curve.curve) {\n\n\t\t\tconst length = this.curve.curve.getLength();\n\t\t\tconst count = Math.ceil(length/this.data.spacing);\n\n\t\t\tlet lineEnd;\n\t\t\tlet tangentGeometry;\n\t\t\tlet normalGeometry;\n\n\t\t\tconst mesh = new THREE.Line(\n\t\t\t\tnew THREE.BufferGeometry(), \n\t\t\t\tnew THREE.LineBasicMaterial({\n\t\t\t\t\tcolor: 'red'\n\t\t\t\t})\n\t\t\t);\n\t\t\tthis.el.setObject3D('line', mesh);\n\n\t\t\tconst points = this.curve.curve.getSpacedPoints(count);\n\t\t\tmesh.geometry.setFromPoints(points);\n\n\t\t\t// Generate normals and tangents for each point\n\t\t\tif (this.data.tangent) points.forEach((p,i) => {\n\t\t\t\tconst u = i/count;\n\t\t\t\tlineEnd = __tempVector1;\n\t\t\t\tlineEnd.copy(p);\n\t\t\t\tlineEnd.add(this.curve.curve.getTangentAt(u, __tempTangent).normalize().multiplyScalar(this.data.length));\n\t\t\t\t\n\t\t\t\ttangentGeometry = new THREE.BufferGeometry().setFromPoints([\n\t\t\t\t\tp,lineEnd\n\t\t\t\t]);\n\n\t\t\t\tmesh.add(new THREE.Line(\n\t\t\t\t\ttangentGeometry,\n\t\t\t\t\tnew THREE.LineBasicMaterial({\n\t\t\t\t\t\tcolor: 'green'\n\t\t\t\t\t})\n\t\t\t\t));\n\t\t\t});\n\n\n\t\t\tif (this.data.normal) points.forEach((p,i) => {\n\t\t\t\tconst u = i/count;\n\t\t\t\tlineEnd = normalFromTangent(\n\t\t\t\t\tthis.curve.curve.getTangentAt(u, __tempTangent),\n\t\t\t\t\t__tempVector1\n\t\t\t\t).multiplyScalar(this.data.length);\n\t\t\t\tlineEnd.add(p);\n\n\t\t\t\tnormalGeometry = new THREE.BufferGeometry().setFromPoints([\n\t\t\t\t\tp, lineEnd\n\t\t\t\t]);\n\n\t\t\t\tmesh.add(new THREE.Line(\n\t\t\t\t\tnormalGeometry,\n\t\t\t\t\tnew THREE.LineBasicMaterial({\n\t\t\t\t\t\tcolor: 'white'\n\t\t\t\t\t})\n\t\t\t\t));\n\t\t\t});\n\t\t}\n\t},\n\n\tremove: function () {\n\n\t\tthis.el.getObject3D('mesh').geometry = new THREE.Geometry();\n\t}\n\n});\n\nfunction nearestPointInPlane(position, normal, p1, out) {\n\tconst d = normal.dot(position);\n\n\t// distance of point from plane\n\tconst t = (d - normal.dot(p1))/normal.length();\n\n\t// closest point on the plane\n\tout.copy(normal);\n\tout.multiplyScalar(t);\n\tout.add(p1);\n\treturn out;\n}\n\nAFRAME.registerComponent('clone-along-curve', {\n\n\tdescription: `Apply this to the curve element, or set one seperately, to instance element at fixed intervals along a curve. They will be rotated to follw the curve.`,\n\n\tdependencies: ['curve'],\n\n\tschema: {\n\t\tcurve: {\n\t\t\tdescription: `Optional, pick a particular curve to use, it defaults to the curve on it's own element`,\n\t\t\ttype: 'selector'\n\t\t},\n\t\tspacing: { \n\t\t\tdescription: `How far apart to place the elements`,\t\t\n\t\t\tdefault: 1\n\t\t},\n\t\tscale: {\n\t\t\tdescription: `Scale of the elements`,\t\n\t\t\ttype: 'vec3',\n\t\t\tdefault: {x:1,y:1,z:1}\n\t\t}\n\t},\n\n\tinit: function () {\n\t\tthis.onPointShift = this.onPointShift.bind(this);\n\t\tthis.update = this.update.bind(this);\n\t\tthis.el.addEventListener('model-loaded', function (e) {\n\t\t\t// if the model is loaded for this element then update so it can be used\n\t\t\t// Don't trigger update for child elements models updating\n\t\t\tif (e.target === this.el) {\n\t\t\t\tthis.update();\n\t\t\t}\n\t\t}.bind(this));\n\t\tthis.pointShift = true;\n\t},\n\n\tupdate: function () {\n\t\tthis.remove();\n\t\tif (this.data.curve) {\n\t\t\tthis.curveEl = this.data.curve;\n\t\t\tthis.curve = this.data.curve.components.curve;\n\t\t\tthis.curveEl.addEventListener('curve-shift', this.onPointShift);\n\t\t\tthis.curveEl.addEventListener('curve-updated', this.update);\n\t\t} else if (this.el.components.curve) {\n\t\t\tthis.curveEl = this.el;\n\t\t\tthis.curve = this.el.components.curve;\n\t\t\tthis.curveEl.addEventListener('curve-shift', this.onPointShift);\n\t\t\tthis.curveEl.addEventListener('curve-updated', this.update);\n\t\t}\n\t},\n\n\tonPointShift: function () {\n\t\tthis.pointShift = true;\n\t\tconst clones = this.el.getObject3D('clones');\n\t\tif (clones) {\n\t\t\tconst cloneCount = clones.children[0].instanceMatrix.count;\n\t\t\tconst length = this.curve.curve.getLength();\n\t\t\tconst count = Math.ceil(length/this.data.spacing);\n\n\t\t\t// If the new needed amount needs more than 5% more pieces then regenerate the isntanced mesh\n\t\t\tif (count > Math.floor(cloneCount * 1.05)) {\n\t\t\t\tthis.update();\n\t\t\t}\n\t\t}\n\t},\n\n\ttick() {\n\t\tconst mesh = this.el.getObject3D('mesh');\n\t\tif (mesh) {\n\t\t\tlet clones = this.el.getObject3D('clones');\n\t\t\tconst length = this.curve.curve.getLength();\n\t\t\tconst count = Math.ceil(length/this.data.spacing);\n\n\t\t\tif (!clones && this.curve) {\n\n\t\t\t\tmesh.visible = false;\n\t\t\t\tclones =  new THREE.Group();\n\t\t\t\tthis.el.setObject3D('clones', clones);\n\t\t\t\tmesh.traverse(function (obj) {\n\t\t\t\t\tif (obj.geometry) {\n\t\t\t\t\t\tconst geometry = obj.geometry.clone();\n\t\t\t\t\t\tgeometry.applyMatrix4(obj.matrix);\n\t\t\t\t\t\tconst mesh = new THREE.InstancedMesh(geometry, obj.material, count);\n\t\t\t\t\t\tmesh.instanceMatrix.setUsage( THREE.DynamicDrawUsage );\n\t\t\t\t\t\tclones.add(mesh);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis.pointShift = true;\n\t\t\t}\n\n\t\t\t// reposition points\n\t\t\tif (this.pointShift) {\n\t\t\t\tconst cloneCount = clones.children[0].instanceMatrix.count;\n\t\t\t\tfor (let i=0;i<cloneCount;i++) {\n\t\t\t\t\tif (i>count) {\n\t\t\t\t\t\t// Hide excess clone pieces\n\t\t\t\t\t\t__tempMatrix4.compose(\n\t\t\t\t\t\t\tzeroVector3,\n\t\t\t\t\t\t\t__tempQuaternion,\n\t\t\t\t\t\t\tzeroVector3\n\t\t\t\t\t\t);\n\t\t\t\t\t\tfor (const instance of clones.children) {\n\t\t\t\t\t\t\tinstance.setMatrixAt(i,__tempMatrix4);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t// handle when there aren't enough clone pieces\n\t\t\t\t\t\tconst u = i/Math.min(count, cloneCount);\n\t\t\t\t\t\tconst tangent = this.curve.curve.getTangentAt(u, __tempTangent);\n\t\t\t\t\t\t__tempMatrix4.compose(\n\t\t\t\t\t\t\tthis.curve.curve.getPointAt(u, __tempPointA),\n\t\t\t\t\t\t\t__tempQuaternion.setFromUnitVectors(zAxis, tangent),\n\t\t\t\t\t\t\tthis.data.scale\n\t\t\t\t\t\t);\n\t\t\t\t\t\tfor (const instance of clones.children) {\n\t\t\t\t\t\t\tinstance.setMatrixAt(i,__tempMatrix4);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const instance of clones.children) {\n\t\t\t\t\tinstance.instanceMatrix.needsUpdate = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tremove: function () {\n\t\tthis.curve = null;\n\t\tconst clones = this.el.getObject3D('clones');\n\t\tif (clones) {\n\t\t\tclones.children.forEach(child => child.dispose());\n\t\t\tthis.el.removeObject3D('clones');\n\t\t}\n\t}\n\n});\n\n\nAFRAME.registerPrimitive('a-curve', {\n\n\tdescription: `Describes a curve doesn't display anything unless one of the other components is used`,\n\n\tdefaultComponents: {\n\t\t'curve': {}\n\t},\n\tmappings: {\n\t\tclosed: 'curve.closed',\n\t\ttension: 'curve.tension'\n\t}\n\n});\n\nAFRAME.registerPrimitive('a-curve-point', {\n\tdescription: `This is used to set the control points of the curve, they don't need to be immediate children.`,\n\tdefaultComponents: {\n\t\t'curve-point': {}\n\t}\n});\n\nAFRAME.registerPrimitive('a-draw-curve', {\n\n\tdescription: `Describes a curve this uses the draw-curve component to draw a line where the curve is.`,\n\n\tdefaultComponents: {\n\t\t'draw-curve': {},\n\t\t'curve': {}\n\t},\n\tmappings: {\n\t\tcurve: 'draw-curve.curve',\n\t\tclosed: 'curve.closed',\n\t\ttension: 'curve.tension'\n\t}\n});\n\n}());\n"],"names":[],"mappings":"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"}